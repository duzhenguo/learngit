pwd 查看目录

git init 建立本地仓库

ls -ah 查看本地仓库

git add ...txt 添加txt文件到仓库 注意文件要放到建立的仓库下
               可一次提交多个文件 和git commit 一起使用

git commit -m "*" 告诉git，把文件提交到仓库 *填写本次提交声明可以输入任何信息

git status 查看结果掌握仓库当前的状态

git diff 名.后缀 查看difference显示的格式是Unix通用的diff格式

git log 显示从最近到最远的提交日志

git log --pretty=oneline 显示最近到最远的提交日志 简单

版本回退

git reset --hard HEAD^  回退到上一个版本 HEAD是当前版本 HEAD^是上一个版本

若要回到最新版本 只要上面的命令行窗口还没关就可找到ID号

git reset --hard 版本id号 前5位即可 git会自动去找

cat 名.后缀 查看文本内容

git reflog 查看命令历史，以便确定要回到未来某个版本

版本库（Repository）
工作区下一个隐藏目录.git 
Git的版本库里存放了很多东西，其中最重要的就是称为stage(又叫做index)的暂存区
还有Git为我们自动创建的第一个分支master,以及指向master的一个指针叫HEAD
stage (index)暂存区
master (HEAD指针)分支
git add 把文件添加进去，实际上就是把文件修改添加到暂存区

git commit 提交更改，实际上就是暂存区的所有内容提交到当前分支

管理修改
Git跟踪并管理的是修改，而非文件
每次修改，如果不用git add将修改放入到暂存区（stage）那么就不会加到git commit提交的内容中去

撤销修改

git checkout -- 名.后缀 可以丢弃工作区中的修改即为使用git add命令
注意 git checkout -- 中"--"很重要，缺少就变成了“切换到另一个分支的命令”

git reset HEAD 名.后缀 将暂存区的修改撤销掉（unsatge）,重新放到工作区

已经提交的不合适的修改到版本库时，要想撤销本次修改，用版本回退，前提时没有推送到远程库

删除文件

rm 名.后缀 用于删除一个文件，如果已经提交到版本库，那么就不用担心误删。但是，只能恢复文件到最新版本，会丢失最近一次提交后修改的内容

远程仓库
登录https://github.com 注册一个账号 

打开 Git Bash 输入 ssh-keygen -t rsa -C "Email"   回车回车回车 三次 在C盘下出现.ssh目录 里面有id_rsa(私钥)和id-rsa.pub（公钥）

然后登录github 点击SSH and GPG keys 点击NEW SSH key title随意 内容填写公钥里面的内容
远程仓库建立完毕（公共可见的）

添加远程库（）
浪费了一下午才连接上去
git remote add origin git@github.com:帐户名:(github上面的仓库名.git)    没括号 origin默认的仓库名字 （我理解为在一个文件夹下运行git init 之后这个本地仓库的名字就是origin）

git push -u origin master 第一次提交 遇见yes 就输入yes回车  实际上是把当前分支master推送到远程

成功后 只要本地做了提交 就可以通过 git push origin master 提交



















































































